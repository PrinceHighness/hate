<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"   
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- sqlMap：映射标签
	namespace：命名空间
 -->
<sqlMap namespace="user">

	<!-- 为数据类型起别名 -->
	<typeAlias alias="userRequest" type="com.jk.pojo.user.UserRequest"/>
	<typeAlias alias="userResponse" type="com.jk.pojo.user.UserResponse"/>
	<typeAlias alias="roleRequest" type="com.jk.pojo.role.RoleRequest"/>
	<typeAlias alias="roleResponse" type="com.jk.pojo.role.RoleResponse"/>
	<typeAlias alias="menuRequest" type="com.jk.pojo.menu.MenuRequest"/>
	<typeAlias alias="menuResponse" type="com.jk.pojo.menu.MenuResponse"/>
	
	<resultMap class="com.jk.pojo.user.UserResponse" id="userResponseMap">
		<result property="userID" column="t_id"/>
		<result property="userAccount" column="t_account"/>
		<result property="userPwd" column="t_pwd"/>
	</resultMap>

	<!-- 添加用户 -->
	<insert id="insertUser" parameterClass="userRequest">
		<selectKey keyProperty="userID" resultClass="int">
			select t_users_seq.nextval as "userID" from dual
		</selectKey>
		insert into t_users
		(t_id, t_account, t_pwd)
		values
		(#userID#, #userAccount#, $userPwd$)
	</insert>
	
	<!-- 查询列表 -->
	<!-- <select id="selectUserList" parameterClass="userRequest" resultClass="userResponse">
		select userid as "userID",
			username as "userAccount",
			userpassword as "userPwd"
		from users
	</select> -->
	<select id="selectUserList" parameterClass="userRequest" resultMap="userResponseMap">
		select u2.* from (
			select u1.*, rownum as rm from (
				select t_id,
					t_account,
					t_pwd
				from t_users u
			) u1
			where rownum <![CDATA[<=]]> #endPos#
		) u2
		where u2.rm >= #startPos#
		
	</select>
	
	<!-- 用户登陆 -->
	<select id="login" parameterClass="userRequest" resultClass="userResponse">
		select t_id as "userID",
			t_account as "userAccount",
			t_pwd as "userPwd",
			t_login_fail_num as "loginFailNum",
			(sysdate - t_login_fail_date) * 24 * 60 * 60 * 1000 as "loginFailDate"
		from t_users
		where t_account = #userAccount#
	</select>
	
	<!-- 修改登录失败的次数 -->
	<update id="updateLoginFailNum">
		update t_users
		set t_login_fail_num = #loginFailNum#,
		t_login_fail_date = sysdate
		where t_account = #userAccount#
	</update>
	
	<!-- 查询用户角色列表 -->
	<select id="selectUserRoleListJson" parameterClass="roleRequest" resultClass="roleResponse">
		select r.t_id as "id", 
			r.t_name as "name", 
			NVL2(m1.t_role_id, 1, 0) as "checked" 
		from t_roles r
		left join (select m.t_role_id from t_u_r_mid m where m.t_user_id = #userID#) m1
		on r.t_id = m1.t_role_id
		order by r.t_id
	</select>
	
	<!-- 删除用户所有的角色 -->
	<delete id="deleteAllRolesByUserID">
		delete from t_u_r_mid
		where t_user_id = #userID#
	</delete>
	
	<!-- 添加用户的角色 -->
	<insert id="insertUserRole">
		insert into t_u_r_mid
		(t_id, t_user_id, t_role_id)
		values
		(t_u_r_mid_seq.nextval, #userID#, #roleID#)
	</insert>
	
	<!-- 查询用户总条数 -->
	<select id="selectUserCount" parameterClass="userRequest" resultClass="int">
		select count(1) from t_users
	</select>
	
	<!-- 查询主页菜单树列表 -->
	<select id="selectTreeListJson" parameterClass="menuRequest" resultClass="java.util.HashMap">
		select m3.t_id as "id",
		       m3.t_name as "text",
		       m3.t_url as "href",
		       m3.t_pid as "pid"
		from t_menus m3
		right join (
		            select distinct t_menu_id from t_r_m_mid m1
		            right join (select t_role_id from t_u_r_mid where t_user_id = #userID#) m2
		            on m1.t_role_id = m2.t_role_id) m4
		on m3.t_id = m4.t_menu_id 
		where m3.t_pid = #pid#
		and m3.t_type = 0
		order by m3.t_id
	</select>
	
	<!-- 查询用户权限列表 -->
	<select id="selectUserMenuListJson" parameterClass="menuRequest" resultClass="menuResponse">
		select distinct m.t_id as "id", 
	      m.t_name as "name", 
	      m.t_url as "href", 
	      m.t_pid as "pid", 
	      m.t_type as "menuType", 
	      nvl2(m1.t_role_id, 1, 0) as "checked",
	      m.t_parent as "isParent" 
	    from t_menus m
	    right join (select m2.t_role_id, m2.t_menu_id from t_r_m_mid m2) m1
	    on m.t_id = m1.t_menu_id
	    inner join (select t_role_id from t_u_r_mid where t_user_id = #userID#) m3
	    on m1.t_role_id = m3.t_role_id
	    order by m.t_id
	</select>
	
</sqlMap>